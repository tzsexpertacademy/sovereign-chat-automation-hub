#!/bin/bash

# üîç DIAGN√ìSTICO COMPLETO DE COMPATIBILIDADE DO SISTEMA
# Este script verifica todas as vers√µes e compatibilidades

echo "üîç ===== DIAGN√ìSTICO COMPLETO DE COMPATIBILIDADE ====="
echo "üìÖ $(date): Iniciando diagn√≥stico..."
echo ""

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para imprimir com cor
print_status() {
    local color=$1
    local message=$2
    echo -e "${color}${message}${NC}"
}

# Verificar se estamos no diret√≥rio correto
if [ ! -f "server/package.json" ]; then
    print_status $RED "‚ùå Execute este script no diret√≥rio raiz do projeto"
    exit 1
fi

echo "üìä ===== VERS√ïES DO SISTEMA ====="

# Vers√£o do Node.js
NODE_VERSION=$(node --version 2>/dev/null || echo "n√£o instalado")
print_status $BLUE "üü¢ Node.js: $NODE_VERSION"

# Vers√£o do NPM
NPM_VERSION=$(npm --version 2>/dev/null || echo "n√£o instalado")
print_status $BLUE "üü¢ NPM: $NPM_VERSION"

# Sistema operacional
OS_INFO=$(uname -a)
print_status $BLUE "üü¢ Sistema: $OS_INFO"

# Arquitetura
ARCH=$(uname -m)
print_status $BLUE "üü¢ Arquitetura: $ARCH"

echo ""
echo "üì¶ ===== DEPEND√äNCIAS DO SERVIDOR ====="

cd server

# Verificar package.json do servidor
if [ -f "package.json" ]; then
    echo "üìÑ Analisando package.json do servidor..."
    
    # whatsapp-web.js
    WHATSAPP_VERSION=$(npm list whatsapp-web.js --depth=0 2>/dev/null | grep whatsapp-web.js | cut -d'@' -f2 || echo "n√£o instalado")
    print_status $BLUE "üì± whatsapp-web.js: $WHATSAPP_VERSION"
    
    # Puppeteer
    PUPPETEER_VERSION=$(npm list puppeteer --depth=0 2>/dev/null | grep puppeteer | cut -d'@' -f2 || echo "n√£o instalado")
    print_status $BLUE "ü§ñ Puppeteer: $PUPPETEER_VERSION"
    
    # Express
    EXPRESS_VERSION=$(npm list express --depth=0 2>/dev/null | grep express | cut -d'@' -f2 || echo "n√£o instalado")
    print_status $BLUE "üåê Express: $EXPRESS_VERSION"
    
    # Socket.io
    SOCKETIO_VERSION=$(npm list socket.io --depth=0 2>/dev/null | grep socket.io | cut -d'@' -f2 || echo "n√£o instalado")
    print_status $BLUE "üîå Socket.io: $SOCKETIO_VERSION"
    
    # QRCode
    QRCODE_VERSION=$(npm list qrcode --depth=0 2>/dev/null | grep qrcode | cut -d'@' -f2 || echo "n√£o instalado")
    print_status $BLUE "üî≥ QRCode: $QRCODE_VERSION"
    
    # Multer
    MULTER_VERSION=$(npm list multer --depth=0 2>/dev/null | grep multer | cut -d'@' -f2 || echo "n√£o instalado")
    print_status $BLUE "üìÅ Multer: $MULTER_VERSION"
else
    print_status $RED "‚ùå package.json n√£o encontrado no servidor"
fi

echo ""
echo "üîç ===== VERIFICA√á√ÉO DE CHROME/CHROMIUM ====="

# Verificar Chrome execut√°veis
CHROME_PATHS=(
    "/usr/bin/google-chrome"
    "/usr/bin/google-chrome-stable"
    "/usr/bin/chromium-browser"
    "/usr/bin/chromium"
    "/snap/bin/chromium"
    "/opt/google/chrome/chrome"
)

CHROME_FOUND=""
for path in "${CHROME_PATHS[@]}"; do
    if [ -x "$path" ]; then
        CHROME_VERSION=$($path --version 2>/dev/null || echo "erro ao verificar")
        print_status $GREEN "‚úÖ Chrome encontrado: $path ($CHROME_VERSION)"
        CHROME_FOUND="$path"
        break
    fi
done

if [ -z "$CHROME_FOUND" ]; then
    print_status $RED "‚ùå Chrome/Chromium n√£o encontrado"
else
    print_status $GREEN "‚úÖ Chrome dispon√≠vel: $CHROME_FOUND"
fi

echo ""
echo "üß™ ===== AN√ÅLISE DE COMPATIBILIDADE ====="

# An√°lise de compatibilidade whatsapp-web.js vs Puppeteer
echo "üî¨ Verificando compatibilidade whatsapp-web.js vs Puppeteer..."

case "$WHATSAPP_VERSION" in
    "1.25.0"*)
        print_status $YELLOW "‚ö†Ô∏è whatsapp-web.js 1.25.0 - PROBLEM√ÅTICA"
        echo "   ‚Ä¢ Conhecida por causar erro 'Evaluation failed: a'"
        echo "   ‚Ä¢ Incompat√≠vel com Puppeteer 21+"
        print_status $RED "   üö® RECOMENDA√á√ÉO: Downgrade para 1.23.0 ou 1.24.0"
        ;;
    "1.24.0"*)
        if [[ "$PUPPETEER_VERSION" == "21."* ]] || [[ "$PUPPETEER_VERSION" == "22."* ]]; then
            print_status $YELLOW "‚ö†Ô∏è whatsapp-web.js 1.24.0 + Puppeteer $PUPPETEER_VERSION"
            echo "   ‚Ä¢ Pode causar problemas com √°udio"
            print_status $YELLOW "   üîß SUGEST√ÉO: Usar Puppeteer 20.x"
        else
            print_status $GREEN "‚úÖ Combina√ß√£o est√°vel"
        fi
        ;;
    "1.23.0"*)
        print_status $GREEN "‚úÖ whatsapp-web.js 1.23.0 - EST√ÅVEL"
        echo "   ‚Ä¢ Vers√£o mais est√°vel para √°udio/m√≠dia"
        ;;
    "1.22."*)
        print_status $GREEN "‚úÖ whatsapp-web.js 1.22.x - EST√ÅVEL"
        ;;
    *)
        print_status $YELLOW "‚ùì Vers√£o n√£o testada: $WHATSAPP_VERSION"
        ;;
esac

echo ""
echo "üéµ ===== VERIFICA√á√ÉO ESPEC√çFICA DE √ÅUDIO ====="

# Verificar se o diret√≥rio temp existe
if [ -d "../temp" ]; then
    print_status $GREEN "‚úÖ Diret√≥rio temp/ existe"
    TEMP_FILES=$(ls -la ../temp/ 2>/dev/null | wc -l)
    echo "   üìÅ Arquivos tempor√°rios: $((TEMP_FILES - 2))"
else
    print_status $RED "‚ùå Diret√≥rio temp/ n√£o existe"
fi

# Verificar logs de √°udio
if [ -f "logs/whatsapp-multi-client.log" ]; then
    echo "üîç √öltimos erros de √°udio nos logs:"
    grep -i "evaluation failed\|audio.*error\|send-audio.*error" logs/whatsapp-multi-client.log | tail -5 | while read line; do
        print_status $RED "   ‚ùå $line"
    done
else
    print_status $YELLOW "‚ö†Ô∏è Log n√£o encontrado"
fi

echo ""
echo "üêõ ===== PROBLEMAS CONHECIDOS ====="

# Verificar problemas conhecidos
echo "üîç Verificando problemas comuns..."

# Problema: Evaluation failed: a
if grep -q "Evaluation failed: a" logs/whatsapp-multi-client.log 2>/dev/null; then
    print_status $RED "üö® PROBLEMA DETECTADO: 'Evaluation failed: a'"
    echo "   ‚Ä¢ Causa: Incompatibilidade whatsapp-web.js com Chrome"
    echo "   ‚Ä¢ Solu√ß√£o: Downgrade whatsapp-web.js para 1.23.0"
    echo "   ‚Ä¢ Comando: npm install whatsapp-web.js@1.23.0"
fi

# Problema: Chrome n√£o encontrado
if [ -z "$CHROME_FOUND" ]; then
    print_status $RED "üö® PROBLEMA: Chrome n√£o encontrado"
    echo "   ‚Ä¢ Solu√ß√£o: sudo apt update && sudo apt install google-chrome-stable"
fi

# Verificar se Chrome tem permiss√µes
if [ -n "$CHROME_FOUND" ]; then
    if [ ! -x "$CHROME_FOUND" ]; then
        print_status $RED "üö® PROBLEMA: Chrome sem permiss√£o de execu√ß√£o"
        echo "   ‚Ä¢ Solu√ß√£o: sudo chmod +x $CHROME_FOUND"
    fi
fi

echo ""
echo "üõ†Ô∏è ===== RECOMENDA√á√ïES DE CORRE√á√ÉO ====="

print_status $BLUE "üìã Baseado na an√°lise, as seguintes a√ß√µes s√£o recomendadas:"
echo ""

# Recomenda√ß√£o principal baseada na vers√£o
case "$WHATSAPP_VERSION" in
    "1.25.0"*)
        print_status $YELLOW "1. üîß URGENTE: Fazer downgrade do whatsapp-web.js"
        echo "   cd server && npm install whatsapp-web.js@1.23.0"
        ;;
    "1.24.0"*)
        if [[ "$PUPPETEER_VERSION" == "21."* ]] || [[ "$PUPPETEER_VERSION" == "22."* ]]; then
            print_status $YELLOW "1. üîß Ajustar vers√£o do Puppeteer"
            echo "   cd server && npm install puppeteer@20.9.0"
        fi
        ;;
esac

print_status $BLUE "2. üßπ Limpar cache e sess√µes"
echo "   rm -rf server/node_modules server/package-lock.json"
echo "   rm -rf server/sessions/* temp/*"

print_status $BLUE "3. üîÑ Reinstalar depend√™ncias"
echo "   cd server && npm install"

if [ -z "$CHROME_FOUND" ]; then
    print_status $BLUE "4. üì• Instalar Chrome"
    echo "   sudo apt update && sudo apt install google-chrome-stable"
fi

echo ""
echo "üöÄ ===== SCRIPT DE CORRE√á√ÉO AUTOM√ÅTICA ====="
print_status $GREEN "Quer que eu crie um script de corre√ß√£o autom√°tica? (Recomendado)"
echo ""

# Verificar se o servidor est√° rodando
if pgrep -f "whatsapp-multi-client-server.js" > /dev/null; then
    print_status $YELLOW "‚ö†Ô∏è Servidor WhatsApp est√° rodando - pare antes de aplicar corre√ß√µes"
    echo "   ./scripts/production-stop-whatsapp.sh"
fi

echo ""
print_status $GREEN "‚úÖ Diagn√≥stico completo!"
echo "üìÖ $(date): Diagn√≥stico finalizado"
echo ""
echo "üìã RESUMO DO SISTEMA:"
echo "   Node.js: $NODE_VERSION"
echo "   whatsapp-web.js: $WHATSAPP_VERSION"
echo "   Puppeteer: $PUPPETEER_VERSION"
echo "   Chrome: ${CHROME_FOUND:-"N√ÉO ENCONTRADO"}"
echo ""

cd ..