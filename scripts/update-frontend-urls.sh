
#!/bin/bash

# Script para atualizar URLs do frontend ap√≥s configurar HTTPS
# Arquivo: scripts/update-frontend-urls.sh

echo "üîß ATUALIZANDO URLs DO FRONTEND PARA HTTPS"
echo "========================================="

DOMAIN="146.59.227.248"
HTTPS_PORT="443"

echo "üìã Configura√ß√µes:"
echo "  ‚Ä¢ Dom√≠nio: $DOMAIN"
echo "  ‚Ä¢ Protocolo: HTTPS"
echo "  ‚Ä¢ Porta: $HTTPS_PORT"
echo ""

# Verificar se o arquivo de configura√ß√£o existe
CONFIG_FILE="src/config/environment.ts"

if [ ! -f "$CONFIG_FILE" ]; then
    echo "‚ùå Arquivo de configura√ß√£o n√£o encontrado: $CONFIG_FILE"
    exit 1
fi

echo "üìù Criando backup do arquivo de configura√ß√£o..."
cp "$CONFIG_FILE" "$CONFIG_FILE.backup.$(date +%Y%m%d_%H%M%S)"

echo "üîÑ Atualizando configura√ß√µes para HTTPS..."

# Criar nova configura√ß√£o
cat > "$CONFIG_FILE" << 'EOF'
// Environment configuration for WhatsApp Multi-Client - HTTPS Enabled
console.log('üåç Configurando ambiente HTTPS...');

// Detect environment
const isProduction = window.location.hostname.includes('lovableproject.com');
const isDevelopment = window.location.hostname === 'localhost';

// HTTPS Server configuration
const HTTPS_SERVER = '146.59.227.248';

// Configure URLs for HTTPS
let SERVER_HOST: string;
let API_BASE_URL: string;
let SOCKET_URL: string;

if (isDevelopment) {
  // Development - use localhost
  SERVER_HOST = 'http://localhost:4000';
  API_BASE_URL = 'http://localhost:4000';
  SOCKET_URL = 'ws://localhost:4000';
  console.log('üõ†Ô∏è Modo Desenvolvimento - Usando localhost');
} else {
  // Production - use HTTPS
  SERVER_HOST = `https://${HTTPS_SERVER}`;
  API_BASE_URL = `https://${HTTPS_SERVER}`;
  SOCKET_URL = `wss://${HTTPS_SERVER}`;
  console.log('üîí Modo Produ√ß√£o - Usando HTTPS');
}

// Export the configured URLs
export const SERVER_URL = SERVER_HOST;
export { API_BASE_URL, SOCKET_URL };

// Export additional config functions
export const getServerConfig = () => ({
  SERVER_URL,
  API_BASE_URL,
  SOCKET_URL,
  isProduction,
  isDevelopment,
  isHttps: true,
  protocol: 'https:',
  serverUrl: SERVER_URL
});

console.log('‚úÖ Configura√ß√£o HTTPS:', {
  SERVER_URL,
  API_BASE_URL,
  SOCKET_URL,
  isHttps: true,
  environment: isProduction ? 'production' : isDevelopment ? 'development' : 'fallback'
});
EOF

echo "‚úÖ Configura√ß√£o atualizada para HTTPS!"
echo ""
echo "üìã Mudan√ßas realizadas:"
echo "  ‚Ä¢ Protocolo: HTTP ‚Üí HTTPS"
echo "  ‚Ä¢ WebSocket: WS ‚Üí WSS"
echo "  ‚Ä¢ Removido sistema de proxy CORS"
echo ""
echo "üîÑ Para aplicar as mudan√ßas:"
echo "  1. Fa√ßa commit das altera√ß√µes"
echo "  2. Fa√ßa push para o reposit√≥rio"
echo "  3. Recompile o frontend se necess√°rio"
echo ""
echo "üåê Novas URLs:"
echo "  ‚Ä¢ API Base: https://$DOMAIN"
echo "  ‚Ä¢ WebSocket: wss://$DOMAIN"
echo ""

# Verificar se existe arquivo de backup
if [ -f "$CONFIG_FILE.backup."* ]; then
    echo "üíæ Backup salvo em: $CONFIG_FILE.backup.*"
fi

echo "‚úÖ Atualiza√ß√£o conclu√≠da!"
EOF
