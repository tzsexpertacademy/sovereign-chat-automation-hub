#!/bin/bash

echo "üîç DIAGN√ìSTICO CONFIGURA√á√ÉO WHATSAPP-WEB.JS"
echo "==========================================="

cd /home/ubuntu/sovereign-chat-automation-hub/server

echo ""
echo "1Ô∏è‚É£ VERIFICA√á√ÉO DE AUTENTICA√á√ÉO"
echo "=============================="

echo "üìã Verificando m√©todo de autentica√ß√£o no c√≥digo..."
if grep -q "LocalAuth" whatsapp-multi-client-server.js; then
    echo "‚úÖ LocalAuth est√° sendo usado (m√©todo moderno)"
else
    echo "‚ùå LocalAuth n√£o encontrado - pode estar usando m√©todo legacy"
fi

if grep -q "options.session" whatsapp-multi-client-server.js; then
    echo "‚ö†Ô∏è ATEN√á√ÉO: options.session encontrado (m√©todo DEPRECATED)"
else
    echo "‚úÖ Sem uso de options.session (bom)"
fi

echo ""
echo "2Ô∏è‚É£ VERIFICA√á√ÉO DE SESS√ïES E CACHE"
echo "================================="

echo "üìÅ Verificando diret√≥rios de sess√£o..."

# Verificar .wwebjs_auth
if [ -d ".wwebjs_auth" ]; then
    SESSION_COUNT=$(find .wwebjs_auth -name "session-*" -type d 2>/dev/null | wc -l)
    echo "‚úÖ Diret√≥rio .wwebjs_auth existe com $SESSION_COUNT sess√µes"
    
    if [ "$SESSION_COUNT" -gt 0 ]; then
        echo "   Sess√µes encontradas:"
        find .wwebjs_auth -name "session-*" -type d 2>/dev/null | head -5
        
        # Verificar tamanho das sess√µes
        TOTAL_SIZE=$(du -sh .wwebjs_auth 2>/dev/null | cut -f1)
        echo "   Tamanho total: $TOTAL_SIZE"
    fi
else
    echo "‚ö†Ô∏è Diret√≥rio .wwebjs_auth n√£o existe (ser√° criado na primeira conex√£o)"
fi

# Verificar .wwebjs_cache
if [ -d ".wwebjs_cache" ]; then
    CACHE_SIZE=$(du -sh .wwebjs_cache 2>/dev/null | cut -f1)
    echo "‚úÖ Diret√≥rio .wwebjs_cache existe (Tamanho: $CACHE_SIZE)"
else
    echo "‚ö†Ô∏è Diret√≥rio .wwebjs_cache n√£o existe"
fi

echo ""
echo "3Ô∏è‚É£ TESTE DE IMPORTA√á√ÉO DA BIBLIOTECA"
echo "==================================="

echo "üì¶ Testando importa√ß√£o do whatsapp-web.js..."
node -e "
try {
    const { Client, LocalAuth } = require('whatsapp-web.js');
    console.log('‚úÖ whatsapp-web.js importado com sucesso');
    console.log('‚úÖ Client dispon√≠vel');
    console.log('‚úÖ LocalAuth dispon√≠vel');
    
    // Verificar vers√£o
    const packageInfo = require('./node_modules/whatsapp-web.js/package.json');
    console.log('üìã Vers√£o:', packageInfo.version);
    
} catch (error) {
    console.log('‚ùå ERRO na importa√ß√£o:', error.message);
    process.exit(1);
}
" 2>/dev/null || echo "‚ùå Erro cr√≠tico na importa√ß√£o"

echo ""
echo "4Ô∏è‚É£ TESTE DE CRIA√á√ÉO DE CLIENTE"
echo "=============================="

echo "üß™ Testando cria√ß√£o b√°sica de cliente WhatsApp..."
node -e "
try {
    const { Client, LocalAuth } = require('whatsapp-web.js');
    
    console.log('üöÄ Criando cliente de teste...');
    
    const client = new Client({
        authStrategy: new LocalAuth({
            clientId: 'test-diagnostic'
        }),
        puppeteer: {
            headless: true,
            args: [
                '--no-sandbox',
                '--disable-setuid-sandbox',
                '--disable-dev-shm-usage',
                '--disable-gpu'
            ],
            timeout: 10000
        }
    });
    
    console.log('‚úÖ Cliente WhatsApp criado com sucesso');
    console.log('‚úÖ LocalAuth configurado');
    console.log('‚úÖ Puppeteer configurado');
    
    // N√£o vamos inicializar para n√£o travar
    console.log('‚úÖ TESTE DE CRIA√á√ÉO BEM-SUCEDIDO');
    
} catch (error) {
    console.log('‚ùå ERRO na cria√ß√£o do cliente:', error.message);
    console.log('üîç Stack trace:', error.stack);
    process.exit(1);
}
" 2>/dev/null || echo "‚ùå Erro cr√≠tico na cria√ß√£o do cliente"

echo ""
echo "5Ô∏è‚É£ VERIFICA√á√ÉO DE CONFIGURA√á√ÉO PUPPETEER"
echo "========================================"

echo "üîç Analisando configura√ß√£o atual do Puppeteer..."
grep -A 20 "puppeteer:" whatsapp-multi-client-server.js | head -20

echo ""
echo "6Ô∏è‚É£ VERIFICA√á√ÉO DE TIMEOUTS"
echo "=========================="

echo "‚è∞ Timeouts configurados:"
grep -E "(timeout|Timeout)" whatsapp-multi-client-server.js | head -5

echo ""
echo "7Ô∏è‚É£ LIMPEZA RECOMENDADA"
echo "======================"

echo "üßπ Para limpar sess√µes antigas (se necess√°rio):"
echo "   rm -rf .wwebjs_auth/session-*"
echo "   rm -rf .wwebjs_cache/*"

echo ""
echo "üßπ Para limpar processos Chrome √≥rf√£os:"
echo "   pkill -f chrome"
echo "   pkill -f chromium"

echo ""
echo "8Ô∏è‚É£ DIAGN√ìSTICO DE LOGS RECENTES"
echo "==============================="

if [ -f "../logs/whatsapp-multi-client.log" ]; then
    echo "üìã √öltimas linhas do log (erros):"
    tail -20 ../logs/whatsapp-multi-client.log | grep -E "(erro|error|ERROR|fail|FAIL)" || echo "   Nenhum erro recente encontrado"
else
    echo "‚ö†Ô∏è Arquivo de log n√£o encontrado"
fi

echo ""
echo "9Ô∏è‚É£ RECOMENDA√á√ïES FINAIS"
echo "======================="

# Verificar vers√£o antiga
WWEBJS_VERSION=$(node -e "console.log(require('./node_modules/whatsapp-web.js/package.json').version)" 2>/dev/null || echo "unknown")
echo "üìã Vers√£o atual do whatsapp-web.js: $WWEBJS_VERSION"

if [ "$WWEBJS_VERSION" != "unknown" ]; then
    MAJOR_VERSION=$(echo $WWEBJS_VERSION | cut -d. -f1)
    if [ "$MAJOR_VERSION" -lt 1 ]; then
        echo "‚ö†Ô∏è ATEN√á√ÉO: Vers√£o muito antiga do whatsapp-web.js"
        echo "üí° RECOMENDA√á√ÉO: Atualize para vers√£o 1.21.0 ou superior"
    else
        echo "‚úÖ Vers√£o adequada do whatsapp-web.js"
    fi
fi

echo ""
echo "‚úÖ Diagn√≥stico configura√ß√£o WhatsApp conclu√≠do!"