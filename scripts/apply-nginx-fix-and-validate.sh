#!/bin/bash

# Script para aplicar corre√ß√£o do Nginx e validar sistema completo
echo "üîß APLICANDO CORRE√á√ÉO DO NGINX E VALIDA√á√ÉO COMPLETA"
echo "==================================================="

# Verificar se est√° rodando como root
if [ "$EUID" -ne 0 ]; then
    echo "‚ùå Execute como root: sudo ./scripts/apply-nginx-fix-and-validate.sh"
    exit 1
fi

DOMAIN="146.59.227.248"
NODE_PORT=4000

echo "üîç 1. VERIFICANDO ESTADO ATUAL"
echo "=============================="

# Verificar se servidor Node.js est√° rodando na porta correta
echo "üîç Verificando servidor Node.js na porta $NODE_PORT..."
if netstat -tlnp | grep ":$NODE_PORT " > /dev/null; then
    echo "‚úÖ Servidor Node.js rodando na porta $NODE_PORT"
else
    echo "‚ùå Servidor Node.js N√ÉO est√° rodando na porta $NODE_PORT"
    echo "   Execute: ./scripts/restart-server-debug.sh"
    exit 1
fi

# Testar health check direto no Node.js
echo "üîç Testando health check direto..."
HEALTH_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "http://127.0.0.1:$NODE_PORT/health")
if [ "$HEALTH_STATUS" = "200" ]; then
    echo "‚úÖ Health check direto: OK ($HEALTH_STATUS)"
else
    echo "‚ùå Health check direto falhou: $HEALTH_STATUS"
    exit 1
fi

echo ""
echo "üîß 2. APLICANDO CORRE√á√ÉO DO NGINX"
echo "================================="

echo "üîÑ Executando script de corre√ß√£o do Nginx..."
./scripts/fix-nginx-routing-final.sh

if [ $? -ne 0 ]; then
    echo "‚ùå Falha na corre√ß√£o do Nginx!"
    exit 1
fi

echo ""
echo "‚è≥ 3. AGUARDANDO NGINX ESTABILIZAR"
echo "=================================="
sleep 5

echo ""
echo "üß™ 4. VALIDA√á√ÉO COMPLETA DO SISTEMA"
echo "==================================="

# Fun√ß√£o para testar endpoint
test_endpoint() {
    local method=$1
    local url=$2
    local description=$3
    
    echo "üîç $description"
    HTTP_CODE=$(curl -k -s -o /dev/null -w "%{http_code}" -X $method https://$DOMAIN$url 2>/dev/null)
    
    case $HTTP_CODE in
        200|201) echo "   ‚úÖ Status: $HTTP_CODE (SUCCESS)" ;;
        404) echo "   ‚ùå Status: $HTTP_CODE (NOT FOUND)" ;;
        400) echo "   ‚ö†Ô∏è  Status: $HTTP_CODE (BAD REQUEST - esperado para teste)" ;;
        500) echo "   ‚ùå Status: $HTTP_CODE (SERVER ERROR)" ;;
        000) echo "   ‚ùå Status: $HTTP_CODE (NO CONNECTION)" ;;
        *) echo "   ‚ùì Status: $HTTP_CODE" ;;
    esac
    
    return $HTTP_CODE
}

CLIENT_ID="35f36a03-39b2-412c-bba6-01fdd45c2dd3_1752173664034"

echo ""
echo "üìã 4.1 ENDPOINTS B√ÅSICOS"
echo "========================"
test_endpoint "GET" "/health" "Health Check"
test_endpoint "GET" "/clients" "Lista de Clientes"

echo ""
echo "üìã 4.2 ENDPOINTS /API/ (PRINCIPAIS)"
echo "==================================="
test_endpoint "GET" "/api/clients/$CLIENT_ID" "GET Status da Inst√¢ncia"
test_endpoint "POST" "/api/clients/$CLIENT_ID/send" "POST Enviar Mensagem"
test_endpoint "GET" "/api/clients/$CLIENT_ID/chats" "GET Listar Chats"
test_endpoint "POST" "/api/clients/$CLIENT_ID/send-media" "POST Enviar M√≠dia"

echo ""
echo "üìã 4.3 ENDPOINTS DE COMPATIBILIDADE"
echo "==================================="
test_endpoint "POST" "/clients/$CLIENT_ID/send-message" "POST Send Message (Compat)"
test_endpoint "GET" "/clients/$CLIENT_ID/chats" "GET Chats (Compat)"

echo ""
echo "üîç 5. VERIFICA√á√ÉO FINAL DOS LOGS"
echo "================================"

echo "üîç √öltimas linhas do log do servidor:"
tail -10 server.log

echo ""
echo "üîç √öltimas linhas do log do Nginx:"
tail -5 /var/log/nginx/whatsapp-error.log 2>/dev/null || echo "   (Log do Nginx n√£o encontrado)"

echo ""
echo "üìä 6. STATUS FINAL"
echo "=================="

# Verificar se servidor ainda est√° rodando
SERVER_PID=$(ps aux | grep "node server/whatsapp-multi-client-server.js" | grep -v grep | awk '{print $2}')
if [ -n "$SERVER_PID" ]; then
    echo "‚úÖ Servidor Node.js rodando (PID: $SERVER_PID)"
else
    echo "‚ùå Servidor Node.js parou de funcionar"
fi

# Verificar Nginx
if systemctl is-active --quiet nginx; then
    echo "‚úÖ Nginx ativo"
else
    echo "‚ùå Nginx inativo"
fi

echo ""
echo "üéØ 7. INSTRU√á√ïES FINAIS"
echo "======================="
echo "1. Teste no navegador: https://$DOMAIN/"
echo "2. Acesse o chat e envie uma mensagem"
echo "3. Tente enviar um arquivo de √°udio"
echo "4. Verifique se n√£o h√° erro 404 no console (F12)"
echo ""
echo "üìù Para monitorar:"
echo "   tail -f server.log"
echo "   tail -f /var/log/nginx/whatsapp-error.log"
echo ""
echo "‚úÖ CORRE√á√ÉO APLICADA E SISTEMA VALIDADO!"