
#!/bin/bash

# Script ULTRA-CONSERVATIVO para adicionar rotas da API - SEM AFETAR LOVABLE
# Arquivo: scripts/setup-simple-https-conservative.sh

echo "üîí ADICIONANDO ROTAS DA API - MODO ULTRA-CONSERVATIVO"
echo "====================================================="

# Verificar se est√° rodando como root
if [ "$EUID" -ne 0 ]; then
    echo "‚ùå Execute como root: sudo ./scripts/setup-simple-https-conservative.sh"
    exit 1
fi

# Configura√ß√µes
DOMAIN="146.59.227.248"
SSL_DIR="/etc/ssl/whatsapp"
BACKEND_PORT=4000
FRONTEND_PORT=8080

echo "üìã Modo ULTRA-CONSERVATIVO - Preservando 100% do que funciona"
echo "‚è∞ Aguarde alguns minutos..."

# BACKUP autom√°tico da configura√ß√£o atual
BACKUP_DIR="/tmp/nginx-backup-$(date +%Y%m%d_%H%M%S)"
mkdir -p "$BACKUP_DIR"
cp /etc/nginx/sites-available/whatsapp-multi-client "$BACKUP_DIR/" 2>/dev/null || true
echo "üíæ Backup criado em: $BACKUP_DIR"

# Criar configura√ß√£o Nginx ULTRA-CONSERVATIVA
echo "‚öôÔ∏è Criando configura√ß√£o ULTRA-CONSERVATIVA..."
cat > /etc/nginx/sites-available/whatsapp-multi-client << EOF
# HTTP -> HTTPS redirect - PRESERVADO EXATAMENTE
server {
    listen 80;
    server_name $DOMAIN;
    return 301 https://\$server_name\$request_uri;
}

# HTTPS Server - CONFIGURA√á√ÉO ULTRA-CONSERVATIVA
server {
    listen 443 ssl http2;
    server_name $DOMAIN;
    
    # SSL Configuration - PRESERVADO EXATAMENTE (funciona com Lovable)
    ssl_certificate $SSL_DIR/fullchain.pem;
    ssl_certificate_key $SSL_DIR/privkey.pem;
    
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    
    # CORS Headers GLOBAIS - PRESERVADOS EXATAMENTE (funcionam com Lovable)
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
    add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control, Pragma, X-Client-Info, User-Agent, Referer' always;
    add_header 'Access-Control-Allow-Credentials' 'false' always;
    add_header 'Access-Control-Max-Age' '86400' always;
    
    # Health Check - PRIMEIRA PRIORIDADE (preserva detec√ß√£o do Lovable)
    location = /health {
        proxy_pass http://127.0.0.1:$BACKEND_PORT/health;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # WebSocket para Socket.IO - SEGUNDA PRIORIDADE (preserva WebSocket do Lovable)
    location /socket.io/ {
        proxy_pass http://127.0.0.1:$BACKEND_PORT/socket.io/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 300s;
    }
    
    # API Clients - ISOLADA (n√£o interfere com rotas principais)
    location = /clients {
        proxy_pass http://127.0.0.1:$BACKEND_PORT/clients;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Handle preflight APENAS para esta rota
        if (\$request_method = 'OPTIONS') {
            return 204;
        }
    }
    
    # Swagger UI - ISOLADA (n√£o interfere com rotas principais)
    location = /api-docs {
        proxy_pass http://127.0.0.1:$BACKEND_PORT/api-docs;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Swagger JSON - ISOLADA (n√£o interfere com rotas principais)
    location = /api-docs.json {
        proxy_pass http://127.0.0.1:$BACKEND_PORT/api-docs.json;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
    
    # Frontend - √öLTIMA PRIORIDADE (preserva funcionamento do Lovable)
    location / {
        proxy_pass http://127.0.0.1:$FRONTEND_PORT;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}
EOF

# Testar configura√ß√£o
echo "üß™ Testando configura√ß√£o Nginx..."
nginx -t

if [ $? -eq 0 ]; then
    echo "‚úÖ Configura√ß√£o Nginx v√°lida!"
    
    # Reiniciar Nginx
    systemctl reload nginx
    
    echo "üîÑ Nginx recarregado!"
else
    echo "‚ùå Erro na configura√ß√£o Nginx - Restaurando backup..."
    cp "$BACKUP_DIR/whatsapp-multi-client" /etc/nginx/sites-available/
    systemctl reload nginx
    echo "üîô Configura√ß√£o anterior restaurada"
    exit 1
fi

echo ""
echo "üéâ CONFIGURA√á√ÉO ULTRA-CONSERVATIVA APLICADA!"
echo "============================================"
echo ""
echo "‚úÖ MANTIDO 100% (n√£o mexemos):"
echo "  ‚Ä¢ Certificado SSL (preservado)"
echo "  ‚Ä¢ Rota /health (preservada - primeira prioridade)"
echo "  ‚Ä¢ Rota /socket.io/ (preservada - segunda prioridade)"
echo "  ‚Ä¢ Rota / (preservada - √∫ltima prioridade)"
echo "  ‚Ä¢ Headers CORS globais (preservados)"
echo ""
echo "‚ûï ADICIONADO (isoladamente):"
echo "  ‚Ä¢ Rota /clients (isolada)"
echo "  ‚Ä¢ Rota /api-docs (isolada)"
echo "  ‚Ä¢ Rota /api-docs.json (isolada)"
echo ""
echo "üîÑ PR√ìXIMOS PASSOS:"
echo "1. Verifique se Lovable ainda funciona"
echo "2. Teste as novas rotas da API"
echo "3. Se algo quebrar: cp $BACKUP_DIR/whatsapp-multi-client /etc/nginx/sites-available/ && systemctl reload nginx"
echo ""
echo "üåê URLs para testar:"
echo "  ‚Ä¢ Lovable: https://$DOMAIN/health"
echo "  ‚Ä¢ API: https://$DOMAIN/clients"
echo "  ‚Ä¢ Swagger: https://$DOMAIN/api-docs"

EOF

chmod +x scripts/setup-simple-https-conservative.sh

