
#!/bin/bash

# Script para validar se rotas da API funcionam sem quebrar Lovable
# Arquivo: scripts/validate-api-routes.sh

echo "üß™ VALIDA√á√ÉO DAS ROTAS DA API"
echo "============================"

DOMAIN="146.59.227.248"

echo "üîç Testando rotas HTTPS..."
echo ""

# Teste 1: Health (cr√≠tico para Lovable)
echo "1Ô∏è‚É£ Health Check (cr√≠tico para Lovable):"
HTTP_CODE=$(curl -k -s -o /dev/null -w "%{http_code}" https://$DOMAIN/health)
if [ "$HTTP_CODE" = "200" ]; then
    echo "   ‚úÖ https://$DOMAIN/health - Status: $HTTP_CODE"
else
    echo "   ‚ùå https://$DOMAIN/health - Status: $HTTP_CODE"
fi

# Teste 2: Clients API
echo "2Ô∏è‚É£ API Clients:"
HTTP_CODE=$(curl -k -s -o /dev/null -w "%{http_code}" https://$DOMAIN/clients)
if [ "$HTTP_CODE" = "200" ]; then
    echo "   ‚úÖ https://$DOMAIN/clients - Status: $HTTP_CODE"
elif [ "$HTTP_CODE" = "404" ]; then
    echo "   ‚ö†Ô∏è https://$DOMAIN/clients - Status: $HTTP_CODE (rota n√£o implementada no backend)"
else
    echo "   ‚ùå https://$DOMAIN/clients - Status: $HTTP_CODE"
fi

# Teste 3: API Docs
echo "3Ô∏è‚É£ API Documentation:"
HTTP_CODE=$(curl -k -s -o /dev/null -w "%{http_code}" https://$DOMAIN/api-docs)
if [ "$HTTP_CODE" = "200" ]; then
    echo "   ‚úÖ https://$DOMAIN/api-docs - Status: $HTTP_CODE"
elif [ "$HTTP_CODE" = "404" ]; then
    echo "   ‚ö†Ô∏è https://$DOMAIN/api-docs - Status: $HTTP_CODE (swagger n√£o implementado no backend)"
else
    echo "   ‚ùå https://$DOMAIN/api-docs - Status: $HTTP_CODE"
fi

# Teste 4: API Docs JSON
echo "4Ô∏è‚É£ API Docs JSON:"
HTTP_CODE=$(curl -k -s -o /dev/null -w "%{http_code}" https://$DOMAIN/api-docs.json)
if [ "$HTTP_CODE" = "200" ]; then
    echo "   ‚úÖ https://$DOMAIN/api-docs.json - Status: $HTTP_CODE"
elif [ "$HTTP_CODE" = "404" ]; then
    echo "   ‚ö†Ô∏è https://$DOMAIN/api-docs.json - Status: $HTTP_CODE (swagger JSON n√£o implementado)"
else
    echo "   ‚ùå https://$DOMAIN/api-docs.json - Status: $HTTP_CODE"
fi

# Teste 5: Frontend (deve ser sempre √∫ltimo)
echo "5Ô∏è‚É£ Frontend (catch-all):"
HTTP_CODE=$(curl -k -s -o /dev/null -w "%{http_code}" https://$DOMAIN/)
if [ "$HTTP_CODE" = "200" ]; then
    echo "   ‚úÖ https://$DOMAIN/ - Status: $HTTP_CODE"
else
    echo "   ‚ùå https://$DOMAIN/ - Status: $HTTP_CODE"
fi

echo ""
echo "üìä Status dos Servi√ßos:"
echo "Nginx: $(systemctl is-active nginx)"
echo "Porta 443: $(ss -tlnp | grep :443 | wc -l) conex√µes"
echo "Porta 4000: $(ss -tlnp | grep :4000 | wc -l) conex√µes"

echo ""
echo "üéØ IMPORTANTE:"
echo "‚Ä¢ O cr√≠tico √© que /health retorne status 200 (para Lovable funcionar)"
echo "‚Ä¢ As rotas da API podem retornar 404 se n√£o implementadas no servidor backend"
echo "‚Ä¢ Teste no Lovable se ainda mostra 'Connected' no canto superior direito"
