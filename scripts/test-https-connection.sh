
#!/bin/bash

# Script para testar conex√£o HTTPS - VALIDA√á√ÉO CIR√öRGICA
# Arquivo: scripts/test-https-connection.sh

echo "üß™ TESTE HTTPS - VALIDA√á√ÉO CIR√öRGICA"
echo "==================================="

DOMAIN="146.59.227.248"

echo "üîç 1. Testando Health Check (deve funcionar - PRESERVADO)..."
echo "-----------------------------------------------------------"
curl -k -s https://$DOMAIN/health | jq -r '.status // "ERROR"' || echo "‚ùå Health check falhou"

echo ""
echo "üîç 2. Testando Frontend Root (deve funcionar - PRESERVADO)..."
echo "------------------------------------------------------------"
HTTP_CODE=$(curl -k -s -o /dev/null -w "%{http_code}" https://$DOMAIN/)
if [ "$HTTP_CODE" = "200" ]; then
    echo "‚úÖ Frontend respondendo (HTTP $HTTP_CODE)"
else
    echo "‚ùå Frontend com problema (HTTP $HTTP_CODE)"
fi

echo ""
echo "üîç 3. Testando API Clients (NOVA - deve funcionar agora)..."
echo "----------------------------------------------------------"
HTTP_CODE=$(curl -k -s -o /dev/null -w "%{http_code}" https://$DOMAIN/clients)
if [ "$HTTP_CODE" = "200" ]; then
    echo "‚úÖ API Clients funcionando (HTTP $HTTP_CODE)"
    curl -k -s https://$DOMAIN/clients | jq -r '.success // "ERROR"' || echo "Resposta n√£o JSON"
else
    echo "‚ùå API Clients com problema (HTTP $HTTP_CODE)"
fi

echo ""
echo "üîç 4. Testando Swagger Docs (NOVA - deve funcionar agora)..."
echo "-----------------------------------------------------------"
HTTP_CODE=$(curl -k -s -o /dev/null -w "%{http_code}" https://$DOMAIN/api-docs)
if [ "$HTTP_CODE" = "200" ]; then
    echo "‚úÖ Swagger Docs funcionando (HTTP $HTTP_CODE)"
else
    echo "‚ùå Swagger Docs com problema (HTTP $HTTP_CODE)"
fi

echo ""
echo "üîç 5. Testando CORS preflight (deve funcionar - PRESERVADO)..."
echo "-------------------------------------------------------------"
HTTP_CODE=$(curl -k -s -o /dev/null -w "%{http_code}" -X OPTIONS https://$DOMAIN/clients \
  -H "Origin: https://19c6b746-780c-41f1-97e3-86e1c8f2c488.lovableproject.com" \
  -H "Access-Control-Request-Method: POST" \
  -H "Access-Control-Request-Headers: Content-Type")
  
if [ "$HTTP_CODE" = "204" ] || [ "$HTTP_CODE" = "200" ]; then
    echo "‚úÖ CORS preflight funcionando (HTTP $HTTP_CODE)"
else
    echo "‚ùå CORS preflight com problema (HTTP $HTTP_CODE)"
fi

echo ""
echo "üîç 6. Status dos servi√ßos..."
echo "----------------------------"
echo "Nginx: $(systemctl is-active nginx 2>/dev/null || echo 'ERROR')"
echo "Porta 443: $(ss -tlnp | grep :443 >/dev/null && echo 'OUVINDO' || echo 'N√ÉO OUVINDO')"
echo "Porta 4000: $(ss -tlnp | grep :4000 >/dev/null && echo 'OUVINDO' || echo 'N√ÉO OUVINDO')"

echo ""
echo "üìã RESUMO DO TESTE:"
echo "==================="
echo "‚úÖ Funcionalidades preservadas:"
echo "  ‚Ä¢ Health check (/health)"
echo "  ‚Ä¢ Frontend raiz (/)"
echo "  ‚Ä¢ WebSocket (/socket.io/)"
echo "  ‚Ä¢ CORS para Lovable"
echo ""
echo "‚ûï Novas funcionalidades:"
echo "  ‚Ä¢ API Clients (/clients)"
echo "  ‚Ä¢ Swagger UI (/api-docs)"
echo ""
echo "üåê Se todos os testes passaram, acesse:"
echo "  https://$DOMAIN/ (aceite o certificado primeiro)"
echo "  https://$DOMAIN/clients (API)"
echo "  https://$DOMAIN/api-docs (Swagger)"
