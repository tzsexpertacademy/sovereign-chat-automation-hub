#!/bin/bash
chmod +x scripts/apply-surgical-fix.sh

echo "üîß APLICANDO CORRE√á√ÉO CIR√öRGICA COMPLETA"
echo "======================================="

# Parar servidor atual
echo "‚èπÔ∏è Parando servidor WhatsApp..."
./scripts/production-stop-whatsapp.sh

# Aguardar um momento
echo "‚è≥ Aguardando finaliza√ß√£o completa..."
sleep 5

# Limpar processos √≥rf√£os
echo "üßπ Limpando processos √≥rf√£os..."
pkill -f chrome || true
pkill -f puppeteer || true
pkill -f node || true

# Aguardar mais um pouco
sleep 3

# Verificar se .env existe no servidor
if [ ! -f "server/.env" ]; then
    echo "‚ùå Arquivo .env n√£o encontrado! A corre√ß√£o pode falhar."
else
    echo "‚úÖ Arquivo .env encontrado"
fi

# Instalar dotenv no servidor se necess√°rio
echo "üì¶ Verificando depend√™ncia dotenv..."
cd server
if ! npm list dotenv > /dev/null 2>&1; then
    echo "üì¶ Instalando dotenv..."
    npm install dotenv
else
    echo "‚úÖ dotenv j√° instalado"
fi
cd ..

# Iniciar servidor com corre√ß√µes
echo "üöÄ Iniciando servidor com corre√ß√µes aplicadas..."
./scripts/production-start-whatsapp.sh

# Aguardar inicializa√ß√£o
echo "‚è≥ Aguardando inicializa√ß√£o (15s)..."
sleep 15

# Testar conectividade
echo "üß™ Testando conectividade..."
HEALTH_STATUS=$(curl -s "https://146.59.227.248/health" | jq -r '.status // "offline"' 2>/dev/null || echo "offline")

if [ "$HEALTH_STATUS" = "ok" ]; then
    echo "‚úÖ Servidor funcionando: $HEALTH_STATUS"
else
    echo "‚ùå Servidor com problemas: $HEALTH_STATUS"
fi

echo ""
echo "üéØ CORRE√á√ïES APLICADAS:"
echo "   ‚úÖ Arquivo .env criado com credenciais corretas"
echo "   ‚úÖ Configura√ß√£o dotenv adicionada ao config.js"
echo "   ‚úÖ Valida√ß√£o Supabase antes de criar inst√¢ncias"
echo "   ‚úÖ Retry logic para conex√µes de banco"
echo "   ‚úÖ Eventos WebSocket espec√≠ficos por inst√¢ncia"
echo "   ‚úÖ Logs detalhados para debugging"
echo "   ‚úÖ Tratamento robusto de erros 500"
echo ""
echo "üß™ PR√ìXIMOS PASSOS:"
echo "   1. Teste criar uma nova inst√¢ncia"
echo "   2. Verifique se QR code aparece"
echo "   3. Monitore logs para debugging"

# Exibir √∫ltimas linhas do log
echo ""
echo "üìã √öLTIMAS LINHAS DO LOG:"
echo "========================"
tail -20 /tmp/whatsapp-server.log 2>/dev/null || echo "Log n√£o encontrado"