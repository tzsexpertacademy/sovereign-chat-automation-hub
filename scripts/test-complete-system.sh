#!/bin/bash

# test-complete-system.sh - Teste completo do sistema ap√≥s corre√ß√µes

echo "üß™ TESTE COMPLETO DO SISTEMA CORRIGIDO"
echo "======================================"

SERVER_URL="146.59.227.248"
CLIENT_ID="35f36a03-39b2-412c-bba6-01fdd45c2dd3_1752173664034"

echo "üåê Servidor: $SERVER_URL"
echo "üì± Client ID: $CLIENT_ID"
echo ""

echo "1Ô∏è‚É£ TESTANDO ENDPOINTS B√ÅSICOS"
echo "=============================="

echo "üîç Health Check"
HEALTH_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "https://$SERVER_URL/health")
echo "   Status: $HEALTH_STATUS"
if [ "$HEALTH_STATUS" = "200" ]; then
    echo "   ‚úÖ Health check OK"
else
    echo "   ‚ùå Health check falhou"
fi

echo ""
echo "üîç Lista de Clientes"
CLIENTS_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "https://$SERVER_URL/clients")
echo "   Status: $CLIENTS_STATUS"
if [ "$CLIENTS_STATUS" = "200" ]; then
    echo "   ‚úÖ Lista de clientes OK"
else
    echo "   ‚ùå Lista de clientes falhou"
fi

echo ""
echo "2Ô∏è‚É£ TESTANDO ENDPOINTS /API/ (PRINCIPAIS)"
echo "========================================"

echo "üîç GET /api/clients/$CLIENT_ID"
API_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "https://$SERVER_URL/api/clients/$CLIENT_ID")
echo "   Status: $API_STATUS"
if [ "$API_STATUS" = "200" ] || [ "$API_STATUS" = "404" ]; then
    echo "   ‚úÖ Endpoint /api/clients/{id} est√° registrado"
else
    echo "   ‚ùå Endpoint /api/clients/{id} n√£o encontrado (500 = erro interno)"
fi

echo ""
echo "üîç POST /api/clients/$CLIENT_ID/send"
SEND_STATUS=$(curl -s -o /dev/null -w "%{http_code}" -X POST \
  -H "Content-Type: application/json" \
  -d '{"to":"5511999999999@c.us","message":"teste"}' \
  "https://$SERVER_URL/api/clients/$CLIENT_ID/send")
echo "   Status: $SEND_STATUS"
if [ "$SEND_STATUS" = "200" ] || [ "$SEND_STATUS" = "400" ] || [ "$SEND_STATUS" = "500" ]; then
    echo "   ‚úÖ Endpoint /api/clients/{id}/send est√° registrado"
else
    echo "   ‚ùå Endpoint /api/clients/{id}/send n√£o encontrado"
fi

echo ""
echo "üîç GET /api/clients/$CLIENT_ID/chats"
CHATS_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "https://$SERVER_URL/api/clients/$CLIENT_ID/chats")
echo "   Status: $CHATS_STATUS"
if [ "$CHATS_STATUS" = "200" ] || [ "$CHATS_STATUS" = "404" ] || [ "$CHATS_STATUS" = "500" ]; then
    echo "   ‚úÖ Endpoint /api/clients/{id}/chats est√° registrado"
else
    echo "   ‚ùå Endpoint /api/clients/{id}/chats n√£o encontrado"
fi

echo ""
echo "üîç POST /api/clients/$CLIENT_ID/send-media"
MEDIA_STATUS=$(curl -s -o /dev/null -w "%{http_code}" -X POST \
  "https://$SERVER_URL/api/clients/$CLIENT_ID/send-media")
echo "   Status: $MEDIA_STATUS"
if [ "$MEDIA_STATUS" = "200" ] || [ "$MEDIA_STATUS" = "400" ] || [ "$MEDIA_STATUS" = "500" ]; then
    echo "   ‚úÖ Endpoint /api/clients/{id}/send-media est√° registrado"
else
    echo "   ‚ùå Endpoint /api/clients/{id}/send-media n√£o encontrado"
fi

echo ""
echo "3Ô∏è‚É£ TESTANDO COMPATIBILIDADE"
echo "==========================="

echo "üîç POST /clients/$CLIENT_ID/send-message (compat)"
COMPAT_SEND=$(curl -s -o /dev/null -w "%{http_code}" -X POST \
  -H "Content-Type: application/json" \
  -d '{"to":"5511999999999@c.us","message":"teste"}' \
  "https://$SERVER_URL/clients/$CLIENT_ID/send-message")
echo "   Status: $COMPAT_SEND"
if [ "$COMPAT_SEND" = "200" ] || [ "$COMPAT_SEND" = "400" ] || [ "$COMPAT_SEND" = "500" ]; then
    echo "   ‚úÖ Endpoint compatibilidade send-message funciona"
else
    echo "   ‚ùå Endpoint compatibilidade send-message n√£o encontrado"
fi

echo ""
echo "üîç GET /clients/$CLIENT_ID/chats (compat)"
COMPAT_CHATS=$(curl -s -o /dev/null -w "%{http_code}" "https://$SERVER_URL/clients/$CLIENT_ID/chats")
echo "   Status: $COMPAT_CHATS"
if [ "$COMPAT_CHATS" = "200" ] || [ "$COMPAT_CHATS" = "404" ] || [ "$COMPAT_CHATS" = "500" ]; then
    echo "   ‚úÖ Endpoint compatibilidade chats funciona"
else
    echo "   ‚ùå Endpoint compatibilidade chats n√£o encontrado"
fi

echo ""
echo "4Ô∏è‚É£ AN√ÅLISE DOS RESULTADOS"
echo "========================="

ALL_API_WORKING=true

if [ "$API_STATUS" = "404" ]; then
    echo "‚ùå PROBLEMA: Endpoint /api/clients/{id} retorna 404"
    ALL_API_WORKING=false
fi

if [ "$SEND_STATUS" = "404" ]; then
    echo "‚ùå PROBLEMA: Endpoint /api/clients/{id}/send retorna 404"
    ALL_API_WORKING=false
fi

if [ "$CHATS_STATUS" = "404" ]; then
    echo "‚ùå PROBLEMA: Endpoint /api/clients/{id}/chats retorna 404"
    ALL_API_WORKING=false
fi

if [ "$MEDIA_STATUS" = "404" ]; then
    echo "‚ùå PROBLEMA: Endpoint /api/clients/{id}/send-media retorna 404"
    ALL_API_WORKING=false
fi

if [ "$ALL_API_WORKING" = true ]; then
    echo "‚úÖ TODOS OS ENDPOINTS /API/ EST√ÉO REGISTRADOS!"
    echo "üéØ O problema dos 404 foi resolvido"
    echo ""
    echo "üìã PR√ìXIMOS PASSOS:"
    echo "1. Testar envio de mensagens no frontend"
    echo "2. Testar envio de √°udios e arquivos"
    echo "3. Verificar se n√£o h√° mais erros 404"
else
    echo "‚ùå AINDA EXISTEM ENDPOINTS /API/ COM 404"
    echo "üîß O servidor precisa ser reiniciado ou as rotas n√£o est√£o sendo registradas"
fi

echo ""
echo "5Ô∏è‚É£ INSTRU√á√ïES DE TESTE NO FRONTEND"
echo "=================================="
echo "1. Acesse o chat no navegador"
echo "2. Tente enviar uma mensagem de texto"
echo "3. Tente enviar um arquivo de √°udio"
echo "4. Verifique os logs do navegador (F12)"
echo "5. Se ainda houver erro 404, o servidor precisa ser reiniciado"

echo ""
echo "‚úÖ TESTE COMPLETO FINALIZADO"