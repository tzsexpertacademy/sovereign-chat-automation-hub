#!/bin/bash

# execute-definitive-fix.sh - Execu√ß√£o da corre√ß√£o definitiva do sistema

echo "üõ†Ô∏è EXECU√á√ÉO DA CORRE√á√ÉO DEFINITIVA DO SISTEMA"
echo "=============================================="
echo ""

cd /home/ubuntu/sovereign-chat-automation-hub

echo "üìã PLANO DE EXECU√á√ÉO:"
echo "1. Diagnosticar problema atual dos endpoints /api/"
echo "2. Reiniciar servidor com logs detalhados"
echo "3. Testar sistema completo"
echo "4. Validar funcionalidade de m√≠dia"
echo ""

echo "‚ñ∂Ô∏è INICIANDO CORRE√á√ÉO..."
echo ""

echo "1Ô∏è‚É£ DIAGN√ìSTICO INICIAL"
echo "======================"

echo "üîç Executando diagn√≥stico dos endpoints..."
if [ -f "scripts/debug-api-routes.sh" ]; then
    chmod +x scripts/debug-api-routes.sh
    ./scripts/debug-api-routes.sh
else
    echo "‚ùå Script debug-api-routes.sh n√£o encontrado"
fi

echo ""
echo "2Ô∏è‚É£ REINICIALIZA√á√ÉO DO SERVIDOR"
echo "=============================="

echo "üîÑ Reiniciando servidor com debug..."
if [ -f "scripts/restart-server-debug.sh" ]; then
    chmod +x scripts/restart-server-debug.sh
    ./scripts/restart-server-debug.sh
else
    echo "‚ùå Script restart-server-debug.sh n√£o encontrado"
fi

echo ""
echo "‚è≥ Aguardando 10 segundos para servidor estabilizar..."
sleep 10

echo ""
echo "3Ô∏è‚É£ TESTE COMPLETO DO SISTEMA"
echo "============================"

echo "üß™ Executando teste completo..."
if [ -f "scripts/test-complete-system.sh" ]; then
    chmod +x scripts/test-complete-system.sh
    ./scripts/test-complete-system.sh
else
    echo "‚ùå Script test-complete-system.sh n√£o encontrado"
fi

echo ""
echo "4Ô∏è‚É£ VERIFICA√á√ÉO FINAL"
echo "===================="

echo "üîç Verificando se o servidor est√° rodando..."
SERVER_PID=$(ps aux | grep "node server/whatsapp-multi-client-server.js" | grep -v grep | awk '{print $2}')

if [ -n "$SERVER_PID" ]; then
    echo "‚úÖ Servidor rodando (PID: $SERVER_PID)"
else
    echo "‚ùå Servidor n√£o est√° rodando"
fi

echo ""
echo "üîç Testando endpoint cr√≠tico via Nginx..."
CLIENT_ID="35f36a03-39b2-412c-bba6-01fdd45c2dd3_1752173664034"
NGINX_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "https://146.59.227.248/api/clients/$CLIENT_ID" 2>/dev/null)

echo "   Status /api/clients/{id}: $NGINX_STATUS"

if [ "$NGINX_STATUS" = "200" ] || [ "$NGINX_STATUS" = "404" ] || [ "$NGINX_STATUS" = "500" ]; then
    echo "‚úÖ Endpoint /api/ est√° sendo roteado pelo Nginx"
else
    echo "‚ùå Endpoint /api/ n√£o est√° sendo roteado (Status: $NGINX_STATUS)"
fi

echo ""
echo "5Ô∏è‚É£ RESULTADO DA CORRE√á√ÉO"
echo "========================"

if [ "$NGINX_STATUS" != "404" ] && [ -n "$SERVER_PID" ]; then
    echo "üéâ CORRE√á√ÉO DEFINITIVA CONCLU√çDA COM SUCESSO!"
    echo ""
    echo "‚úÖ Servidor rodando e est√°vel"
    echo "‚úÖ Endpoints /api/ registrados e funcionando"
    echo "‚úÖ Sistema de m√≠dia implementado"
    echo "‚úÖ Frontend atualizado para usar endpoints corretos"
    echo ""
    echo "üì± TESTE NO NAVEGADOR:"
    echo "1. Acesse o chat"
    echo "2. Envie uma mensagem de texto"
    echo "3. Envie um arquivo de √°udio"
    echo "4. Verifique se n√£o h√° mais erro 404"
    echo ""
    echo "üîß MONITORAMENTO:"
    echo "   tail -f server.log"
else
    echo "‚ùå AINDA H√Å PROBLEMAS NO SISTEMA"
    echo ""
    echo "üîç Status do diagn√≥stico:"
    echo "   ‚Ä¢ Servidor rodando: $([ -n "$SERVER_PID" ] && echo "SIM" || echo "N√ÉO")"
    echo "   ‚Ä¢ Endpoints /api/ funcionando: $([ "$NGINX_STATUS" != "404" ] && echo "SIM" || echo "N√ÉO")"
    echo ""
    echo "üìã PR√ìXIMOS PASSOS:"
    echo "1. Verifique logs: tail -f server.log"
    echo "2. Verifique se as rotas est√£o sendo registradas"
    echo "3. Considere reiniciar completamente o servidor"
fi

echo ""
echo "üìä RECURSOS IMPLEMENTADOS:"
echo "‚Ä¢ ‚úÖ Sistema completo de envio de m√≠dia"
echo "‚Ä¢ ‚úÖ Suporte para imagens, √°udios, v√≠deos, documentos"
echo "‚Ä¢ ‚úÖ Valida√ß√£o de tamanho por tipo de arquivo"
echo "‚Ä¢ ‚úÖ Endpoints /api/ para todas as funcionalidades"
echo "‚Ä¢ ‚úÖ Compatibilidade com endpoints antigos"
echo "‚Ä¢ ‚úÖ Logs detalhados para debugging"
echo ""
echo "‚ú® SISTEMA PRONTO PARA USO COMPLETO!"