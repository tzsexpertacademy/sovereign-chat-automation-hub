
#!/bin/bash

# Script de diagn√≥stico DETALHADO do Socket.IO
# Arquivo: scripts/diagnose-socketio-detailed.sh

echo "üîç DIAGN√ìSTICO DETALHADO DO SOCKET.IO"
echo "====================================="

DOMAIN="146.59.227.248"

echo "üìã 1. TESTANDO SOCKET.IO HANDSHAKE"
echo "=================================="

# Testar handshake inicial do Socket.IO (polling)
echo "üîç Testando handshake Socket.IO (polling):"
echo "URL: http://localhost:4000/socket.io/?EIO=4&transport=polling"

POLLING_RESPONSE=$(curl -s "http://localhost:4000/socket.io/?EIO=4&transport=polling" 2>&1)
POLLING_STATUS=$(curl -s -w "%{http_code}" -o /dev/null "http://localhost:4000/socket.io/?EIO=4&transport=polling" 2>/dev/null)

echo "Status Polling: $POLLING_STATUS"
echo "Resposta: $POLLING_RESPONSE"
echo ""

# Testar via HTTPS/Nginx
echo "üîç Testando via HTTPS (Nginx):"
echo "URL: https://$DOMAIN/socket.io/?EIO=4&transport=polling"

HTTPS_POLLING_STATUS=$(curl -k -s -w "%{http_code}" -o /dev/null "https://$DOMAIN/socket.io/?EIO=4&transport=polling" 2>/dev/null)
HTTPS_POLLING_RESPONSE=$(curl -k -s "https://$DOMAIN/socket.io/?EIO=4&transport=polling" 2>&1)

echo "Status HTTPS Polling: $HTTPS_POLLING_STATUS"
echo "Resposta: $HTTPS_POLLING_RESPONSE"
echo ""

echo "üìã 2. VERIFICANDO VERS√ïES E CONFIGURA√á√ÉO"
echo "========================================"

# Verificar vers√£o Socket.IO instalada
echo "üîç Vers√£o Socket.IO no servidor:"
if [ -f "server/package.json" ]; then
    grep "socket.io" server/package.json || echo "Socket.IO n√£o encontrado no package.json"
else
    echo "‚ùå package.json n√£o encontrado"
fi
echo ""

# Verificar se Socket.IO est√° sendo inicializado
echo "üîç Verificando inicializa√ß√£o Socket.IO no c√≥digo:"
if [ -f "server/whatsapp-multi-client-server.js" ]; then
    grep -n "socket.io\|io(" server/whatsapp-multi-client-server.js | head -5
else
    echo "‚ùå Servidor n√£o encontrado"
fi
echo ""

echo "üìã 3. TESTANDO CONECTIVIDADE DIRETA"
echo "=================================="

# Testar rota base do Socket.IO
echo "üîç Testando rota base Socket.IO:"
curl -s -I "http://localhost:4000/socket.io/" | head -3
echo ""

# Testar diferentes transports
echo "üîç Testando WebSocket transport:"
WEBSOCKET_STATUS=$(curl -s -w "%{http_code}" -o /dev/null "http://localhost:4000/socket.io/?EIO=4&transport=websocket" 2>/dev/null)
echo "WebSocket Status: $WEBSOCKET_STATUS"
echo ""

echo "üìã 4. DIAGN√ìSTICO DE LOGS EM TEMPO REAL"
echo "======================================="

echo "üîç Fazendo requisi√ß√£o e capturando logs simult√¢neos..."

# Fazer requisi√ß√£o Socket.IO e capturar resposta detalhada
echo "Requisi√ß√£o de teste:"
curl -v "http://localhost:4000/socket.io/?EIO=4&transport=polling" 2>&1 | head -20
echo ""

echo "üìã 5. RESUMO DO DIAGN√ìSTICO"
echo "=========================="

echo "Polling Local: $POLLING_STATUS"
echo "Polling HTTPS: $HTTPS_POLLING_STATUS"
echo "WebSocket: $WEBSOCKET_STATUS"

if [ "$POLLING_STATUS" = "200" ]; then
    echo "‚úÖ Socket.IO Polling funcionando localmente"
elif [ "$POLLING_STATUS" = "400" ]; then
    echo "‚ùå PROBLEMA: Socket.IO retornando 400 - Handshake falhando"
    echo "üîß CAUSA PROV√ÅVEL: Configura√ß√£o incorreta do Socket.IO no servidor"
else
    echo "‚ùå PROBLEMA: Status inesperado: $POLLING_STATUS"
fi

if [ "$HTTPS_POLLING_STATUS" = "200" ]; then
    echo "‚úÖ Socket.IO funcionando via HTTPS"
elif [ "$HTTPS_POLLING_STATUS" = "400" ]; then
    echo "‚ùå PROBLEMA: Socket.IO via HTTPS tamb√©m falhando"
else
    echo "‚ö†Ô∏è HTTPS Status: $HTTPS_POLLING_STATUS"
fi

echo ""
echo "üîß PR√ìXIMOS PASSOS:"
if [ "$POLLING_STATUS" = "400" ]; then
    echo "1. CR√çTICO: Corrigir configura√ß√£o Socket.IO no servidor Node.js"
    echo "2. Verificar se Socket.IO est√° sendo inicializado corretamente"
    echo "3. Confirmar compatibilidade de vers√µes"
    echo "4. Testar handshake ap√≥s corre√ß√£o"
else
    echo "1. Socket.IO local OK - problema pode ser no Nginx"
    echo "2. Verificar configura√ß√£o de proxy WebSocket no Nginx"
fi
