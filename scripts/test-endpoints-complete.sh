#!/bin/bash

echo "üß™ TESTE COMPLETO DOS ENDPOINTS CORRIGIDOS"
echo "==========================================="

# Configura√ß√µes
DOMAIN="146.59.227.248"
CLIENT_ID="35f36a03-39b2-412c-bba6-01fdd45c2dd3_1752173664034"

echo "üåê Testando servidor: $DOMAIN"
echo "üì± Client ID de teste: $CLIENT_ID"
echo ""

# Fun√ß√£o para testar endpoint
test_endpoint() {
  local method=$1
  local url=$2
  local description=$3
  local data=$4
  
  echo "üîç $description"
  echo "   $method https://$DOMAIN$url"
  
  if [ -z "$data" ]; then
    HTTP_CODE=$(curl -k -s -o /dev/null -w "%{http_code}" -X $method https://$DOMAIN$url)
  else
    HTTP_CODE=$(curl -k -s -o /dev/null -w "%{http_code}" -X $method \
                     -H "Content-Type: application/json" \
                     -d "$data" \
                     https://$DOMAIN$url)
  fi
  
  case $HTTP_CODE in
    200|201) echo "   ‚úÖ Status: $HTTP_CODE" ;;
    404) echo "   ‚ö†Ô∏è  Status: $HTTP_CODE (endpoint n√£o encontrado)" ;;
    400) echo "   ‚ö†Ô∏è  Status: $HTTP_CODE (dados inv√°lidos - esperado para teste)" ;;
    500) echo "   ‚ùå Status: $HTTP_CODE (erro do servidor)" ;;
    *) echo "   ‚ùì Status: $HTTP_CODE" ;;
  esac
  echo ""
}

echo "1Ô∏è‚É£ ENDPOINTS B√ÅSICOS"
echo "===================="
test_endpoint "GET" "/health" "Health Check"
test_endpoint "GET" "/clients" "Lista de Clientes"

echo "2Ô∏è‚É£ ENDPOINTS DE INST√ÇNCIAS"
echo "=========================="
test_endpoint "GET" "/clients/$CLIENT_ID/status" "Status da Inst√¢ncia"
test_endpoint "POST" "/clients/$CLIENT_ID/connect" "Conectar Inst√¢ncia"
test_endpoint "POST" "/clients/$CLIENT_ID/disconnect" "Desconectar Inst√¢ncia"

echo "3Ô∏è‚É£ ENDPOINTS DE MENSAGENS (COMPATIBILIDADE)"
echo "==========================================="
test_endpoint "POST" "/clients/$CLIENT_ID/send-message" "Enviar Mensagem (Compat)" '{"to":"teste","message":"teste"}'
test_endpoint "GET" "/clients/$CLIENT_ID/chats" "Listar Chats (Compat)"

echo "4Ô∏è‚É£ ENDPOINTS DA API (NOVOS)"
echo "=========================="
test_endpoint "GET" "/api/clients/$CLIENT_ID" "Status API"
test_endpoint "POST" "/api/clients/$CLIENT_ID/send" "Enviar Mensagem API" '{"to":"teste","message":"teste"}'
test_endpoint "GET" "/api/clients/$CLIENT_ID/chats" "Listar Chats API"
test_endpoint "POST" "/api/clients/$CLIENT_ID/logout" "Logout API"

echo "5Ô∏è‚É£ ENDPOINTS DE M√çDIA"
echo "===================="
test_endpoint "POST" "/api/clients/$CLIENT_ID/send-media" "Enviar M√≠dia (sem arquivo)"

echo "‚úÖ TESTE COMPLETO FINALIZADO"
echo "============================"
echo ""
echo "üìã RESUMO:"
echo "‚Ä¢ Endpoints b√°sicos: /health, /clients"
echo "‚Ä¢ Endpoints de compatibilidade: /clients/{id}/send-message, /clients/{id}/chats"
echo "‚Ä¢ Endpoints da API: /api/clients/{id}/send, /api/clients/{id}/chats"
echo "‚Ä¢ Endpoints de m√≠dia: /api/clients/{id}/send-media"
echo ""
echo "üéØ Se todos os endpoints retornaram status 200, 400 ou 404 (mas n√£o 500),"
echo "   ent√£o a corre√ß√£o foi bem-sucedida!"
echo ""
echo "üìñ Para testar no frontend:"
echo "   1. Tente enviar uma mensagem"
echo "   2. Verifique se n√£o h√° mais erro 404"
echo "   3. Teste envio de √°udio/m√≠dia"